<!DOCTYPE html>
<html lang="es" data-theme="light">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="Sistema avanzado de gestión de inventario" />
  <title>Inventario de Implementos</title>
  
  <!-- Tailwind CSS CDN (puedes reemplazar por build local en producción) -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f5f3ff',
              100: '#ede9fe',
              200: '#ddd6fe',
              300: '#c4b5fd',
              400: '#a78bfa',
              500: '#8b5cf6',
              600: '#7c3aed',
              700: '#6d28d9',
              800: '#5b21b6',
              900: '#4c1d95',
            },
            secondary: {
              50: '#f0fdf4',
              100: '#dcfce7',
              200: '#bbf7d0',
              300: '#86efac',
              400: '#4ade80',
              500: '#22c55e',
              600: '#16a34a',
              700: '#15803d',
              800: '#166534',
              900: '#14532d',
            },
            danger: {
              50: '#fef2f2',
              100: '#fee2e2',
              200: '#fecaca',
              300: '#fca5a5',
              400: '#f87171',
              500: '#ef4444',
              600: '#dc2626',
              700: '#b91c1c',
              800: '#991b1b',
              900: '#7f1d1d',
            }
          },
          fontFamily: {
            sans: ['Inter var', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif'],
          },
        }
      }
    }
  </script>
  
  <!-- Font Awesome para íconos -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  
  <!-- Alpine.js para interactividad -->
  <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.12.0/dist/cdn.min.js"></script>
  
  <!-- Animate.css para animaciones -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
  
  <!-- Toastify para notificaciones -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  
  <style>
    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    ::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb {
      background: #888;
      border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: #555;
    }
    
    /* Dark mode scrollbar */
    .dark ::-webkit-scrollbar-track {
      background: #2d3748;
    }
    .dark ::-webkit-scrollbar-thumb {
      background: #4a5568;
    }
    .dark ::-webkit-scrollbar-thumb:hover {
      background: #718096;
    }
    
    /* Custom file input button */
    .file-input-button {
      transition: all 0.3s ease;
    }
    .file-input-button:hover {
      transform: translateY(-1px);
    }
    
    /* Smooth transitions for dark mode */
    body, .bg-primary, .bg-white, .bg-gray-100, .text-gray-800 {
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    
    /* Table row hover effect */
    .table-row-hover:hover {
      background-color: rgba(139, 92, 246, 0.05);
    }
    .dark .table-row-hover:hover {
      background-color: rgba(139, 92, 246, 0.1);
    }
  </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900 min-h-screen flex flex-col">
  <!-- Header con modo oscuro -->
  <header class="bg-primary-600 dark:bg-primary-900 text-white shadow-lg">
    <div class="container mx-auto px-4 py-6 flex justify-between items-center">
      <h1 class="text-3xl font-bold animate__animated animate__fadeIn">
        <i class="fas fa-boxes mr-2"></i> Inventario de Implementos
      </h1>
      
      <div class="flex items-center space-x-4">
        <!-- Dark mode toggle -->
        <button id="theme-toggle" class="p-2 rounded-full hover:bg-primary-700 dark:hover:bg-primary-800 transition-colors">
          <i class="fas fa-moon dark:hidden"></i>
          <i class="fas fa-sun hidden dark:block"></i>
        </button>
        
        <!-- User dropdown (simulado) -->
        <div x-data="{ open: false }" class="relative">
          <button @click="open = !open" class="flex items-center space-x-2 focus:outline-none">
            <div class="w-10 h-10 rounded-full bg-primary-500 flex items-center justify-center">
              <i class="fas fa-user text-white"></i>
            </div>
            <span class="hidden md:inline">Usuario</span>
            <i class="fas fa-chevron-down text-xs transition-transform duration-200" :class="{ 'transform rotate-180': open }"></i>
          </button>
          
          <div x-show="open" @click.away="open = false" 
               class="absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg py-1 z-50 animate__animated animate__fadeIn animate__faster"
               x-transition:enter="transition ease-out duration-100"
               x-transition:enter-start="transform opacity-0 scale-95"
               x-transition:enter-end="transform opacity-100 scale-100"
               x-transition:leave="transition ease-in duration-75"
               x-transition:leave-start="transform opacity-100 scale-100"
               x-transition:leave-end="transform opacity-0 scale-95">
            <a href="#" class="block px-4 py-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">Perfil</a>
            <a href="#" class="block px-4 py-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">Configuración</a>
            <div class="border-t border-gray-200 dark:border-gray-700 my-1"></div>
            <a href="#" class="block px-4 py-2 text-gray-800 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700">Cerrar sesión</a>
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Main content -->
  <main class="flex-grow container mx-auto px-4 py-8">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden animate__animated animate__fadeInUp">
      <!-- Card header -->
      <div class="border-b border-gray-200 dark:border-gray-700 px-6 py-4 flex flex-col md:flex-row md:items-center md:justify-between">
        <h2 class="text-2xl font-semibold text-gray-800 dark:text-white">
          <i class="fas fa-list mr-2"></i> Lista de Implementos
        </h2>
        
        <!-- Search and filters -->
        <div class="mt-4 md:mt-0 flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2">
          <div class="relative">
            <input type="text" placeholder="Buscar..." 
                   class="pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
            <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
          </div>
          <select class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
            <option value="">Todas las categorías</option>
            <option value="Biblioteca">Biblioteca</option>
            <option value="Mercadeo">Mercadeo</option>
            <option value="Servicios Generales">Servicios Generales</option>
          </select>
        </div>
      </div>
      
      <!-- Table container -->
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-50 dark:bg-gray-700">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                ID
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Imagen
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Nombre
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Categoría
              </th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Cantidad
              </th>
              <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                Acciones
              </th>
            </tr>
          </thead>
          <tbody id="implementos-lista" class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
            <!-- Los implementos se cargarán aquí dinámicamente -->
            <tr>
              <td colspan="6" class="px-6 py-4 text-center text-gray-500 dark:text-gray-400">
                <i class="fas fa-spinner fa-spin mr-2"></i> Cargando inventario...
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <!-- Paginación (simulada) -->
      <div class="bg-gray-50 dark:bg-gray-700 px-6 py-3 flex items-center justify-between border-t border-gray-200 dark:border-gray-700">
        <div class="flex-1 flex justify-between sm:hidden">
          <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
            Anterior
          </a>
          <a href="#" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
            Siguiente
          </a>
        </div>
        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
          <div>
            <p class="text-sm text-gray-700 dark:text-gray-300">
              Mostrando <span class="font-medium">1</span> a <span class="font-medium">10</span> de <span class="font-medium">20</span> resultados
            </p>
          </div>
          <div>
            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
              <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600">
                <span class="sr-only">Anterior</span>
                <i class="fas fa-chevron-left"></i>
              </a>
              <a href="#" aria-current="page" class="z-10 bg-primary-50 dark:bg-primary-900 border-primary-500 text-primary-600 dark:text-primary-300 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
                1
              </a>
              <a href="#" class="bg-white dark:bg-gray-700 border-gray-300 text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
                2
              </a>
              <a href="#" class="bg-white dark:bg-gray-700 border-gray-300 text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
                3
              </a>
              <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600">
                <span class="sr-only">Siguiente</span>
                <i class="fas fa-chevron-right"></i>
              </a>
            </nav>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Formulario para agregar nuevo implemento -->
    <div class="mt-8 bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden animate__animated animate__fadeInUp animate__delay-1s">
      <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
        <h3 class="text-lg font-medium text-gray-800 dark:text-white">
          <i class="fas fa-plus-circle mr-2"></i> Agregar Nuevo Implemento
        </h3>
      </div>
      
      <div class="px-6 py-4">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
          <div>
            <label for="nuevo-nombre" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nombre</label>
            <input type="text" id="nuevo-nombre" placeholder="Nombre del implemento" 
                   class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
          </div>
          
          <div>
            <label for="nueva-categoria" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Categoría</label>
            <select id="nueva-categoria" class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
              <option value="">Selecciona una categoría</option>
              <option value="Biblioteca">Biblioteca</option>
              <option value="Mercadeo">Mercadeo</option>
              <option value="Servicios Generales">Servicios Generales</option>
            </select>
          </div>
          
          <div>
            <label for="nueva-cantidad" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Cantidad</label>
            <input type="number" id="nueva-cantidad" placeholder="0" min="0" 
                   class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
          </div>
          
          <div class="flex flex-col">
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Imagen</label>
            <div class="flex items-center space-x-2">
              <div class="file-input-container relative">
                <button class="file-input-button bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg flex items-center">
                  <i class="fas fa-image mr-2"></i> Seleccionar
                </button>
                <input type="file" id="nueva-imagen" accept="image/*" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer">
              </div>
              <button onclick="agregarImplemento()" class="bg-secondary-600 hover:bg-secondary-700 text-white px-4 py-2 rounded-lg flex items-center">
                <i class="fas fa-save mr-2"></i> Guardar
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="bg-gray-100 dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 py-4">
    <div class="container mx-auto px-4 text-center text-gray-600 dark:text-gray-400 text-sm">
      <p>Sistema de Inventario &copy; 2023. Todos los derechos reservados.</p>
    </div>
  </footer>

  <!-- Modal de confirmación (usando Alpine.js) -->
  <div x-data="{ open: false, action: '', id: 0 }" x-show="open" class="fixed inset-0 z-50 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
      <div x-show="open" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" 
           x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" 
           class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

      <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

      <div x-show="open" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95" 
           x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100" x-transition:leave="ease-in duration-200" 
           x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100" x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95" 
           class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
        <div class="bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
          <div class="sm:flex sm:items-start">
            <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900 sm:mx-0 sm:h-10 sm:w-10">
              <i class="fas fa-exclamation text-red-600 dark:text-red-300"></i>
            </div>
            <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
              <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white" id="modal-title">
                Confirmar acción
              </h3>
              <div class="mt-2">
                <p class="text-sm text-gray-500 dark:text-gray-400" x-text="action === 'delete' ? '¿Estás seguro de que deseas eliminar este implemento? Esta acción no se puede deshacer.' : '¿Deseas guardar los cambios realizados?'"></p>
              </div>
            </div>
          </div>
        </div>
        <div class="bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
          <!-- ... dentro del modal ... -->
<button type="button"
  @click="if(action === 'delete') { window.eliminarImplemento(id); open = false; } else { window.guardarImplemento(id); open = false; }"
  class="w-full inline-flex justify-center rounded-md ...">
  Confirmar
</button>

          <button type="button" @click="open = false" 
                  class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-600 text-base font-medium text-gray-700 dark:text-white hover:bg-gray-50 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
            Cancelar
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Configuración inicial
    document.addEventListener('DOMContentLoaded', function() {
      // Inicializar modo oscuro
      initDarkMode();
      
      // Cargar implementos
      cargarImplementos();
      
      // Configurar event listeners
      document.getElementById('theme-toggle').addEventListener('click', toggleDarkMode);
    });
    
    // Modo oscuro
    function initDarkMode() {
      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    }
    
    function toggleDarkMode() {
      if (localStorage.getItem('color-theme')) {
        if (localStorage.getItem('color-theme') === 'light') {
          document.documentElement.classList.add('dark');
          localStorage.setItem('color-theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
        }
      } else {
        if (document.documentElement.classList.contains('dark')) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
        } else {
          document.documentElement.classList.add('dark');
          localStorage.setItem('color-theme', 'dark');
        }
      }
    }
    
    // Mostrar notificación
    function mostrarNotificacion(mensaje, esExito) {
      Toastify({
        text: mensaje,
        duration: 3000,
        close: true,
        gravity: "top",
        position: "right",
        stopOnFocus: true,
        style: {
          background: esExito ? "#22c55e" : "#ef4444",
          color: "white",
          borderRadius: "0.5rem",
          boxShadow: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)"
        }
      }).showToast();
    }
    
    // Cargar implementos
    async function cargarImplementos() {
      try {
        // Mostrar skeleton loading
        const tabla = document.getElementById("implementos-lista");
        tabla.innerHTML = `
          <tr>
            <td colspan="6" class="px-6 py-4">
              <div class="animate-pulse flex space-x-4">
                <div class="flex-1 space-y-4 py-1">
                  <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4"></div>
                  <div class="space-y-2">
                    <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded"></div>
                    <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-5/6"></div>
                  </div>
                </div>
              </div>
            </td>
          </tr>
        `;
        
        // Simular delay para ver el efecto de carga (quitar en producción)
        await new Promise(resolve => setTimeout(resolve, 800));
        
        const res = await fetch('http://localhost:3000/implementos');
        if (!res.ok) {
          throw new Error('Error al cargar los implementos');
        }
        const implementos = await res.json();
        
        // Renderizar implementos
        tabla.innerHTML = "";
        
        if (implementos.length === 0) {
          tabla.innerHTML = `
            <tr>
              <td colspan="6" class="px-6 py-4 text-center text-gray-500 dark:text-gray-400">
                <i class="fas fa-box-open mr-2"></i> No hay implementos registrados
              </td>
            </tr>
          `;
          return;
        }
        
        implementos.forEach((imp) => {
          const fila = document.createElement("tr");
          fila.className = "table-row-hover";
          fila.innerHTML = `
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
              ${imp.id}
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center space-x-2">
                <img src="${imp.imagen_url || 'https://via.placeholder.com/80?text=Sin+imagen'}" 
                     alt="${imp.nombre}" 
                     class="w-10 h-10 rounded-md object-cover shadow-sm">
                <div class="file-input-container relative">
                  <button class="file-input-button bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 px-2 py-1 rounded text-xs">
                    <i class="fas fa-camera mr-1"></i> Cambiar
                  </button>
                  <input type="file" id="imagen-${imp.id}" accept="image/*" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer">
                </div>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <input type="text" value="${imp.nombre}" id="nombre-${imp.id}" 
                     class="w-full px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-1 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <select id="categoria-${imp.id}" 
                      class="w-full px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-1 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
                <option value="Biblioteca" ${imp.categoria === 'Biblioteca' ? 'selected' : ''}>Biblioteca</option>
                <option value="Mercadeo" ${imp.categoria === 'Mercadeo' ? 'selected' : ''}>Mercadeo</option>
                <option value="Servicios Generales" ${imp.categoria === 'Servicios Generales' ? 'selected' : ''}>Servicios Generales</option>
              </select>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <input type="number" value="${imp.cantidad}" min="0" id="cantidad-${imp.id}" 
                     class="w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded focus:ring-1 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white">
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
              <div class="flex justify-end space-x-2">
                <button onclick="document.querySelector('[x-data]').__x.$data.open = true; document.querySelector('[x-data]').__x.$data.action = 'save'; document.querySelector('[x-data]').__x.$data.id = ${imp.id};" 
                        class="text-secondary-600 dark:text-secondary-400 hover:text-secondary-900 dark:hover:text-secondary-300">
                  <i class="fas fa-save"></i>
                </button>
                <button onclick="document.querySelector('[x-data]').__x.$data.open = true; document.querySelector('[x-data]').__x.$data.action = 'delete'; document.querySelector('[x-data]').__x.$data.id = ${imp.id};" 
                        class="text-danger-600 dark:text-danger-400 hover:text-danger-900 dark:hover:text-danger-300">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </div>
            </td>
          `;
          tabla.appendChild(fila);
        });
      } catch (error) {
        console.error(error);
        mostrarNotificacion("Hubo un error al cargar los implementos", false);
      }
    }
    
    // Agregar un nuevo implemento
    async function agregarImplemento() {
      const nombre = document.getElementById("nuevo-nombre").value.trim();
      const categoria = document.getElementById("nueva-categoria").value;
      const cantidad = document.getElementById("nueva-cantidad").value;
      const imagenInput = document.getElementById("nueva-imagen");
      
      if (!nombre || !categoria || cantidad === "") {
        return mostrarNotificacion("Completa todos los campos obligatorios", false);
      }
      
      if (isNaN(cantidad) || cantidad <= 0) {
        return mostrarNotificacion("La cantidad debe ser un número positivo.", false);
      }
      
      try {
        const formData = new FormData();
        formData.append("nombre", nombre);
        formData.append("categoria", categoria);
        formData.append("cantidad", cantidad);
        
        if (imagenInput.files[0]) {
          formData.append("imagen", imagenInput.files[0]);
        }
        
        // Mostrar spinner en el botón
        const btn = document.querySelector('button[onclick="agregarImplemento()"]');
        const originalHtml = btn.innerHTML;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Guardando...';
        btn.disabled = true;
        
        const response = await fetch("http://localhost:3000/implementos", {
          method: "POST",
          body: formData
        });
        
        // Restaurar botón
        btn.innerHTML = originalHtml;
        btn.disabled = false;
        
        if (response.ok) {
          document.getElementById("nuevo-nombre").value = "";
          document.getElementById("nueva-categoria").value = "";
          document.getElementById("nueva-cantidad").value = "";
          document.getElementById("nueva-imagen").value = "";
          mostrarNotificacion("Implemento agregado correctamente", true);
          cargarImplementos();
        } else {
          const responseBody = await response.json();
          throw new Error(responseBody.message || "Error al agregar el implemento");
        }
      } catch (error) {
        console.error(error);
        mostrarNotificacion(error.message, false);
      }
    }
    
    // Guardar cambios en un implemento
    async function guardarImplemento(id) {
      const nombre = document.getElementById(`nombre-${id}`).value.trim();
      const categoria = document.getElementById(`categoria-${id}`).value;
      const cantidad = document.getElementById(`cantidad-${id}`).value;
      const imagenInput = document.getElementById(`imagen-${id}`);
      
      if (!nombre || !categoria || cantidad === "") {
        return mostrarNotificacion("Completa todos los campos obligatorios", false);
      }
      
      if (isNaN(cantidad) || cantidad < 0) {
        return mostrarNotificacion("La cantidad debe ser un número positivo", false);
      }
      
      try {
        const formData = new FormData();
        formData.append("nombre", nombre);
        formData.append("categoria", categoria);
        formData.append("cantidad", cantidad);
        
        if (imagenInput.files[0]) {
          formData.append("imagen", imagenInput.files[0]);
        }
        
        const response = await fetch(`http://localhost:3000/implementos/${id}`, {
          method: "PUT",
          body: formData
        });
        
        if (response.ok) {
          mostrarNotificacion("Implemento actualizado correctamente", true);
          cargarImplementos();
        } else {
          const responseBody = await response.json();
          throw new Error(responseBody.message || "Error al actualizar el implemento");
        }
      } catch (error) {
        console.error(error);
        mostrarNotificacion(error.message, false);
      }
    }
    
    // Eliminar un implemento
    async function eliminarImplemento(id) {
      try {
        const response = await fetch(`http://localhost:3000/implementos/${id}`, {
          method: "DELETE"
        });
        
        if (response.ok) {
          mostrarNotificacion("Implemento eliminado correctamente", true);
          cargarImplementos();
        } else {
          const responseBody = await response.json();
          throw new Error(responseBody.message || "Error al eliminar el implemento");
        }
      } catch (error) {
        console.error(error);
        mostrarNotificacion(error.message, false);
      }
    }
  </script>
</body>
</html>